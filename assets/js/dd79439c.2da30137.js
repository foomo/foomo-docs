"use strict";(self.webpackChunkfoomo=self.webpackChunkfoomo||[]).push([[7355],{4335:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>h});var r=n(5893),o=n(3905);const s={slug:"prometheus-cardinality-issues",authors:["smartinov"],tags:["prometheus","cardinality","devops","ops","k8s","oom","memory"]},i="Prometheus Is Out Of Memory. Again.",a={permalink:"/blog/prometheus-cardinality-issues",editUrl:"https://github.com/foomo/foomo-docs/tree/main/foomo/blog/2022-01-25-prometheus-cardinality-issues/index.mdx",source:"@site/blog/2022-01-25-prometheus-cardinality-issues/index.mdx",title:"Prometheus Is Out Of Memory. Again.",description:"The Annoyance",date:"2022-01-25T00:00:00.000Z",formattedDate:"January 25, 2022",tags:[{label:"prometheus",permalink:"/blog/tags/prometheus"},{label:"cardinality",permalink:"/blog/tags/cardinality"},{label:"devops",permalink:"/blog/tags/devops"},{label:"ops",permalink:"/blog/tags/ops"},{label:"k8s",permalink:"/blog/tags/k-8-s"},{label:"oom",permalink:"/blog/tags/oom"},{label:"memory",permalink:"/blog/tags/memory"}],hasTruncateMarker:!1,authors:[{name:"Stefan Martinov",title:"Memelord",url:"https://github.com/smartinov",imageURL:"https://github.com/smartinov.png",key:"smartinov"}],frontMatter:{slug:"prometheus-cardinality-issues",authors:["smartinov"],tags:["prometheus","cardinality","devops","ops","k8s","oom","memory"]},unlisted:!1,prevItem:{title:"Why bundle size is important?",permalink:"/blog/why-bundle-size-is-important"},nextItem:{title:"The never ending search a search engine 2022-01 edition",permalink:"/blog/searching-for-search-engines"}},l={authorsImageUrls:[void 0]},h=[{value:"The Annoyance",id:"the-annoyance",level:2},{value:"The Problem",id:"the-problem",level:2},{value:"The Source",id:"the-source",level:2},{value:"The Solution",id:"the-solution",level:2},{value:"The Further Reading",id:"the-further-reading",level:2}];function c(e){const t={a:"a",code:"code",em:"em",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"the-annoyance",children:"The Annoyance"}),"\n",(0,r.jsx)(t.p,{children:"So, we've all been there. You go to your trusty grafana, search for some sweet metrics that you implemented and WHAM!\nPrometheus returns us a 503, a trusty way of saying I'm not ready, and I'm probably going to die soon.\nAnd since we're running in kubernetes I'm going to die soon, again and again.\nAnd you're getting reports from your colleagues that prometheus is not responding.\nAnd you can't ignore them anymore."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Bummer.",src:n(7680).Z+"",width:"480",height:"270"})}),"\n",(0,r.jsx)(t.h2,{id:"the-problem",children:"The Problem"}),"\n",(0,r.jsx)(t.p,{children:"All right, lets check what's happening to the little guy."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"kubectl get pods -n monitoring\n\nprometheus-prometheus-kube-prometheus-prometheus-0       1/2     Running   4          5m\n"})}),"\n",(0,r.jsx)(t.p,{children:"It seems like it's stuck in the running state, where the container is not yet ready.\nLet's describe the deployment, to check out what's happening."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:"     State:          Running                                                                                                                                                                                                                        \u2502\n       Started:      Wed, 12 Jan 2022 15:12:49 +0100                                                                                                                                                                                                \u2502\n     Last State:     Terminated                                                                                                                                                                                                                     \u2502\n       Reason:       OOMKilled                                                                                                                                                                                                                      \u2502\n       Exit Code:    137                                                                                                                                                                                                                            \u2502\n       Started:      Tue, 11 Jan 2022 17:14:41 +0100                                                                                                                                                                                                \u2502\n       Finished:     Wed, 12 Jan 2022 15:12:47 +0100                                                                                                                                                                                                \u2502\n"})}),"\n",(0,r.jsx)(t.p,{children:"So we see that the prometheus is in a running state waiting for the readiness probe to trigger, probably working on recovering from Write Ahead Log (WAL).\nThis could be an issue where prometheus is recovering from an error, or a restart and does not have enough memory to write everything in the WAL.\nWe could be running into an issue where we set the request/limits memory lower than the prometheus requires, and the kube scheduler keeps killing prometheus for wanting more memory."}),"\n",(0,r.jsx)(t.p,{children:"For this case, we could give it more memory to work to see if it recovers. We should also analyze why the prometheus WAL is getting clogged up."}),"\n",(0,r.jsx)(t.p,{children:"In essence, we want to check what has changed so that we suddenly have a high memory spike in our sweet, sweet environment."}),"\n",(0,r.jsx)(t.h2,{id:"the-source",children:"The Source"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Cardinality",src:n(1309).Z+"",width:"501",height:"500"})}),"\n",(0,r.jsx)(t.p,{children:"A lot of prometheus issues revolve around cardinality.\nMemory spikes that break your deployment? Cardinality.\nPrometheus dragging its feet like it's Monday after the log4j (the second one ofc) zero day security breach? Cardinality.\nNot getting that raise since you worked hard the past 16 years without wavering? You bet your ass it's cardinality.\nSo, as you can see much of life's problems can be accredited to cardinality."}),"\n",(0,r.jsxs)(t.p,{children:["In short cardinality of your metrics is the combination of all label values per metric.\nFor example, if our metric ",(0,r.jsx)(t.code,{children:"http_request_total"})," had a label response code, and let's say we support 8 status codes, our cardinality starts off at 8.\nFor good measure we want to record the HTTP verb for the request. We support ",(0,r.jsx)(t.code,{children:"GET POST PUT HEAD"})," which would put the cardinality to 4*8=",(0,r.jsx)(t.strong,{children:"32"}),".\nNow, if someone adds a URL to the metric label (",(0,r.jsx)(t.strong,{children:"!!VERY BAD IDEA!!"}),", but bare with me now) and we have 2 active pages, we'd have a cardinality of 2*4*8=",(0,r.jsx)(t.strong,{children:"64"}),".\nBut, imagine someone starts scraping your website for potential vulnerabilities. Imagine all the URLs that will appear, most likely only once."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:"mywebsite.com/admin.php\nmywebsite.com/wp/admin.php\nmywebsite.com/?utm_source=GUID\n...\n"})}),"\n",(0,r.jsxs)(t.p,{children:['This would blow up our cardinality to kingdom come. Like you will be out of memory faster than "',(0,r.jsx)(t.a,{href:"https://www.reddit.com/r/ProgrammerHumor/comments/a483yz/those_javascript_devs/",children:"a new super awesome Javascript gamechanger framework"}),'" is born.\nOr to quote user ',(0,r.jsx)(t.a,{href:"https://www.reddit.com/user/naveen17797/",children:"naveen17797"})," ",(0,r.jsx)(t.em,{children:"Scientists predict the number of js frameworks may exceed human population by 2020,at that point of time random string generators will be used to name those frameworks."})]}),"\n",(0,r.jsx)(t.p,{children:"The point to this story is, be very mindful of how you use labels and cardinality in prometheus, since that will indeed have great impact on your prometheus performance."}),"\n",(0,r.jsx)(t.h2,{id:"the-solution",children:"The Solution"}),"\n",(0,r.jsxs)(t.p,{children:["Since this has never happened to me (never-ever) I found the following solution to be handy.\nSince we can't get prometheus up and running to utilize PromQL to detect the potential issues, we have to find another way to detect high cardinality.\nTherefore, we might want to get our hands dirty with some ",(0,r.jsx)(t.code,{children:"kubectl exec -it -n monitoring pods/prometheus-prometheus-kube-prometheus-prometheus-0 -- sh"}),", and run the prometheus ",(0,r.jsx)(t.code,{children:"tsdb"})," analysis too."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"/prometheus $ promtool tsdb analyze .\n"})}),"\n",(0,r.jsx)(t.p,{children:"Which produced the result."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:"> Block ID: 01FT8E8YY4THHZ2S7C3G04GJMG\n> Duration: 1h59m59.997s\n> Series: 564171\n> Label names: 285\n> Postings (unique label pairs): 21139\n> Postings entries (total label pairs): 6423664\n>\n> ...\n>\n> Highest cardinality metric names:\n> 11340 haproxy_server_http_responses_total\n> ...\n"})}),"\n",(0,r.jsxs)(t.p,{children:["We see the potential issue here, where the ",(0,r.jsx)(t.code,{children:"haproxy_server_http_responses_total"})," metric is having a super-high cardinality which is growing.\nWe need to deal with it, so that our prometheus instance can breathe again. In this particular case, the solution was updating the haproxy."]}),"\n",(0,r.jsx)(t.p,{children:"... or burn it, up to you."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Flame Thrower",src:n(914).Z+"",width:"1440",height:"1080"})}),"\n",(0,r.jsx)(t.h2,{id:"the-further-reading",children:"The Further Reading"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://github.com/prometheus/prometheus/blob/main/tsdb/docs/format/wal.md",children:"WAL Definition"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://ganeshvernekar.com/blog/prometheus-tsdb-wal-and-checkpoint/",children:"WAL & Checkpoints"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://www.robustperception.io/using-tsdb-analyze-to-investigate-churn-and-cardinality",children:"Using TSDB"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://www.robustperception.io/which-are-my-biggest-metrics",children:"Biggest Metrics"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://www.robustperception.io/cardinality-is-key",children:"Cardinality"})}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,o.ah)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},3905:(e,t,n)=>{n.d(t,{ah:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),h=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),u=h(n),m=o,p=u["".concat(l,".").concat(m)]||u[m]||c[m]||s;return n?r.createElement(p,i(i({ref:t},d),{},{components:n})):r.createElement(p,i({ref:t},d))}));d.displayName="MDXCreateElement"},7680:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/bummer-e80d471cba23d1ee83e8463187845893.webp"},1309:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/cardinality-5f722655c50c25a6a91c53884ad19677.webp"},914:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/flame-thrower-56bcf89132356ff53c03ca029d9d0746.webp"}}]);