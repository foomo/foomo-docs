"use strict";(self.webpackChunkfoomo=self.webpackChunkfoomo||[]).push([[8988],{7442:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(5893),s=n(3905);const o={Title:"HTTP Client and Server",position:12,tags:["Go Basics"]},a="HTTP Client and Server",i={id:"backend/go-by-example/http",title:"HTTP Client and Server",description:"The HTTP protocol is used to communicate between Client and Server. The `net/http` package provides all methods needed to implement a client and",source:"@site/docs/backend/go-by-example/http.mdx",sourceDirName:"backend/go-by-example",slug:"/backend/go-by-example/http",permalink:"/docs/backend/go-by-example/http",draft:!1,unlisted:!1,editUrl:"https://github.com/foomo/foomo-docs/tree/main/foomo/docs/backend/go-by-example/http.mdx",tags:[{label:"Go Basics",permalink:"/docs/tags/go-basics"}],version:"current",frontMatter:{Title:"HTTP Client and Server",position:12,tags:["Go Basics"]},sidebar:"backendSidebar",previous:{title:"Go Routines and Channels",permalink:"/docs/backend/go-by-example/goroutines-and-channels"},next:{title:"Interfaces",permalink:"/docs/backend/go-by-example/interfaces"}},l={},c=[{value:"HTTP Client",id:"http-client",level:2},{value:"HTTP Server",id:"http-server",level:2},{value:"RESTful",id:"restful",level:3}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"http-client-and-server",children:"HTTP Client and Server"}),"\n",(0,r.jsxs)(t.p,{children:["The HTTP protocol is used to communicate between Client and Server. The ",(0,r.jsx)(t.code,{children:"net/http"})," package provides all methods needed to implement a client and\na server and the most commonly used request methods."]}),"\n",(0,r.jsx)(t.p,{children:"The most commonly used request methods are:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["GET:","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"This method is used to request data from the server or specified source. Used for fetching data."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["POST:","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"This method is used to send a request with data in the body to a server. Used for creating data."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["PATCH:","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"This method is used to partially update an existing data entry."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["PUT:","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"This method is used to entirely update an existing data entry."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"http-client",children:"HTTP Client"}),"\n",(0,r.jsx)(t.p,{children:"The HTTP Client consumes the API, it sends a request to the HTTP Server. The following code shows an example for all the commonly used HTTP requests."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'\n// GET Requests: Pass the URL to request the data from.\n// Returns a response and an error.\nresp, err := http.Get("https://foomo.org") \n\n// Post Requests: Pass the URL to post data to, specify the content type of the data, \n// and pass the body containing the data of the request.\n// Returns a response and an error.\nresp, err := http.Post("https://foomo.org", "application/json", body)\n\n// PATCH Requests, specify it\'s a PATCH request, pass the URL to request, \n// and the body containing the data of the request.\n// Returns a response and an error.\nresp, err := http.NewRequest(http.MethodPatch, "https://foomo.org", body) \n\n// PUT Requests, specify it\'s a PUT request, pass the URL to request,\n// and the body containing the data of the request.\n// Returns a response and an error.\nresp, err := http.NewRequest(http.MethodPut, "https://foomo.org", body) \n\n'})}),"\n",(0,r.jsx)(t.h2,{id:"http-server",children:"HTTP Server"}),"\n",(0,r.jsxs)(t.p,{children:["the HTTP Server accepts API calls from a Client. Handlers are a fundamental concept in the ",(0,r.jsx)(t.code,{children:"net/http"})," package.\nThey are your way of basically telling how a request is supposed to be handled. Handler functions always take a ResponseWriter and a pointer to a Request as argument:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:"func myHandler(w http.ResponseWriter, req *http.Request) {\n    ...\n}\n"})}),"\n",(0,r.jsx)(t.p,{children:"In the main function of your server you register all the handlers implemented and serve them on a specified port:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'func main () {\n\n    http.HandleFunc("/myPage", myHandler) // specify the path and the handler function\n\n    http.ListenAndServe(":8000", nil) // specify the port and the router, which is the default router in this case.\n}\n'})}),"\n",(0,r.jsx)(t.h3,{id:"restful",children:"RESTful"})]})}function h(e={}){const{wrapper:t}={...(0,s.ah)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},3905:(e,t,n)=>{n.d(t,{ah:()=>c});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),p=c(n),u=s,m=p["".concat(l,".").concat(u)]||p[u]||d[u]||o;return n?r.createElement(m,a(a({ref:t},h),{},{components:n})):r.createElement(m,a({ref:t},h))}));h.displayName="MDXCreateElement"}}]);